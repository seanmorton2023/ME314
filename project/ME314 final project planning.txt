
To-Do:


####GLARING ISSUE####

I have no idea how long it takes for the impact condition and
update portion of things to run. This will greatly affect 
playability of the simulation. See if we can get a sense
before we get too invested in the interactive UI

---> I want to do more with the UI but this might take precedence. 
	See if the impact conditions can be solved beforehand, like
	HW5 problem1, in a reasonable amount of time. if not, I may
	be screwed if we have to calculate in Sympy on the fly -
	this would kill the possibiity of this running in real time



Mathematical Calculations
- decide on sign convention for theta1 and theta2 - 
	whether or not one will be positive. will def affect results
- check: I don't know that I calculated inertia properly; see if I need
	to consider rhat_b^T * rhat_b. didn't have that and it may cause problems
- Some of the helper functions have been changed in the
	final project, so I need to port them over to
	the HW7 code. I've updated the following functions:
	- CalculateVb6
	- UnhatMatrix3
- define impact conditions for each impact
- define impact updates for each possible impact
- redefine inertia matrix: assume a nonzero thickness in z direction
	so that results make more sense


User Interface
- write SpringForce function- 1hr
- define frames s, user_m, and pendtop_a in simulation
- adjust scale of gridlines so it reflects our actual simulation, rather
	than the positions in pixels
- add in a method for exiting the Tk() loop manually
- look into Tk Frame(), see if it's meaningful in any way
- later: look into details of key binding again - for CS110 we used helper functions
	to detect the keycode of the thing we pressed, then checked event.keycode
	rather than event.char

Questions:
- ask if I can reuse code from previous CS classes where I did GUI
	operations similar to this
	
	
	
#----------------------------#

DONE

- add in gridlines: can make a function for it based on a number
	of gridlines and a screen size, or on a dist. between 